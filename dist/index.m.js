import{ethers as e}from"ethers";var n=[{inputs:[{internalType:"address",name:"_lpContract",type:"address"},{internalType:"address",name:"_initialOwner",type:"address"},{internalType:"address",name:"_governance",type:"address"},{internalType:"address",name:"_bqBTC",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"CoverNotAvailable",type:"error"},{inputs:[],name:"InsufficientPoolBalance",type:"error"},{inputs:[],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidCoverDuration",type:"error"},{inputs:[],name:"LpNotActive",type:"error"},{inputs:[],name:"NameAlreadyExists",type:"error"},{inputs:[],name:"NoClaimableReward",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"ReentrancyGuardReentrantCall",type:"error"},{inputs:[],name:"UnsupportedCoverType",type:"error"},{inputs:[],name:"UserHaveAlreadyPurchasedCover",type:"error"},{inputs:[],name:"WrongPool",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"coverId",type:"uint256"},{indexed:!1,internalType:"string",name:"name",type:"string"},{indexed:!1,internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"}],name:"CoverCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"coverValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"coverFee",type:"uint256"},{indexed:!1,internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"}],name:"CoverPurchased",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"coverId",type:"uint256"},{indexed:!1,internalType:"string",name:"coverName",type:"string"},{indexed:!1,internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"}],name:"CoverUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayoutClaimed",type:"event"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"NextLpClaimTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bqBTC",outputs:[{internalType:"contract IbqBTC",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bqBTCAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"claimPayoutForLP",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"coverCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"coverExists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"coverFeeBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"coverIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"covers",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"string",name:"coverName",type:"string"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"chains",type:"string"},{internalType:"uint256",name:"capacity",type:"uint256"},{internalType:"uint256",name:"cost",type:"uint256"},{internalType:"uint256",name:"capacityAmount",type:"uint256"},{internalType:"uint256",name:"coverValues",type:"uint256"},{internalType:"uint256",name:"maxAmount",type:"uint256"},{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"string",name:"CID",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"coverId",type:"uint256"},{internalType:"string",name:"_cid",type:"string"},{internalType:"enum CoverLib.RiskType",name:"_riskType",type:"uint8"},{internalType:"string",name:"_coverName",type:"string"},{internalType:"string",name:"_chains",type:"string"},{internalType:"uint256",name:"_capacity",type:"uint256"},{internalType:"uint256",name:"_cost",type:"uint256"},{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"createCover",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"deleteExpiredUserCovers",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAllAvailableCovers",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"string",name:"coverName",type:"string"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"chains",type:"string"},{internalType:"uint256",name:"capacity",type:"uint256"},{internalType:"uint256",name:"cost",type:"uint256"},{internalType:"uint256",name:"capacityAmount",type:"uint256"},{internalType:"uint256",name:"coverValues",type:"uint256"},{internalType:"uint256",name:"maxAmount",type:"uint256"},{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"string",name:"CID",type:"string"}],internalType:"struct CoverLib.Cover[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAllParticipants",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getAllUserCovers",outputs:[{components:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"coverId",type:"uint256"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"coverName",type:"string"},{internalType:"uint256",name:"coverValue",type:"uint256"},{internalType:"uint256",name:"claimPaid",type:"uint256"},{internalType:"uint256",name:"coverPeriod",type:"uint256"},{internalType:"uint256",name:"endDay",type:"uint256"},{internalType:"bool",name:"isActive",type:"bool"}],internalType:"struct CoverLib.GenericCoverInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCoverFeeBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_coverId",type:"uint256"}],name:"getCoverInfo",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"string",name:"coverName",type:"string"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"chains",type:"string"},{internalType:"uint256",name:"capacity",type:"uint256"},{internalType:"uint256",name:"cost",type:"uint256"},{internalType:"uint256",name:"capacityAmount",type:"uint256"},{internalType:"uint256",name:"coverValues",type:"uint256"},{internalType:"uint256",name:"maxAmount",type:"uint256"},{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"string",name:"CID",type:"string"}],internalType:"struct CoverLib.Cover",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"getDepositClaimableDays",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"getLastClaimTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_coverId",type:"uint256"}],name:"getUserCoverInfo",outputs:[{components:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"coverId",type:"uint256"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"coverName",type:"string"},{internalType:"uint256",name:"coverValue",type:"uint256"},{internalType:"uint256",name:"claimPaid",type:"uint256"},{internalType:"uint256",name:"coverPeriod",type:"uint256"},{internalType:"uint256",name:"endDay",type:"uint256"},{internalType:"bool",name:"isActive",type:"bool"}],internalType:"struct CoverLib.GenericCoverInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserParticipation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"lpContract",outputs:[{internalType:"contract ILP",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"participants",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"participation",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_coverId",type:"uint256"},{internalType:"uint256",name:"_coverValue",type:"uint256"},{internalType:"uint256",name:"_coverPeriod",type:"uint256"},{internalType:"uint256",name:"_coverFee",type:"uint256"}],name:"purchaseCover",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_coverId",type:"uint256"},{internalType:"string",name:"_coverName",type:"string"},{internalType:"enum CoverLib.RiskType",name:"_riskType",type:"uint8"},{internalType:"string",name:"_cid",type:"string"},{internalType:"string",name:"_chains",type:"string"},{internalType:"uint256",name:"_capacity",type:"uint256"},{internalType:"uint256",name:"_cost",type:"uint256"},{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updateCover",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_coverId",type:"uint256"}],name:"updateMaxAmount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_coverId",type:"uint256"},{internalType:"uint256",name:"_claimPaid",type:"uint256"}],name:"updateUserCoverValue",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userCovers",outputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"coverId",type:"uint256"},{internalType:"enum CoverLib.RiskType",name:"riskType",type:"uint8"},{internalType:"string",name:"coverName",type:"string"},{internalType:"uint256",name:"coverValue",type:"uint256"},{internalType:"uint256",name:"claimPaid",type:"uint256"},{internalType:"uint256",name:"coverPeriod",type:"uint256"},{internalType:"uint256",name:"endDay",type:"uint256"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function"}],t=function(n,t,a){try{return Promise.resolve(function(r,p){try{var u=Promise.resolve(i(n)).then(function(n){if(!n||!n.cost)throw new Error("Invalid cover info or cost");var i=n.cost/100*t*(a/365);return{numericFee:i,weiValue:e.parseEther(i.toFixed(18))}})}catch(e){return p(e)}return u&&u.then?u.then(void 0,p):u}(0,function(e){throw console.error("Error calculating cover fee:",e),e}))}catch(e){return Promise.reject(e)}},i=function(t){return Promise.resolve(a()).then(function(i){var a=new e.Contract(r,n,i);return Promise.resolve(a.getCoverInfo(t)).then(function(e){return{id:Number(e[0]),name:e[1],risk:Number(e[2]),chains:e[3],capacity:Number(e[4]),cost:Number(e[5]),capacityAmount:Number(e[6]),coverValues:Number(e[7]),maxAmount:Number(e[8]),poolId:Number(e[9]),cid:e[10]}})})},a=function(){try{if(!window.ethereum)throw new Error("MetaMask is not installed");var n=new e.BrowserProvider(window.ethereum);return Promise.resolve(n.send("eth_accounts",[])).then(function(e){return e.length>0?Promise.resolve(n.getSigner()):Promise.resolve(n.send("eth_requestAccounts",[])).then(function(){return Promise.resolve(n.getSigner())})})}catch(e){return Promise.reject(e)}},r="0xB102A937608Ae9177175964087e8fcD7B782FD3d",p=/*#__PURE__*/function(){function p(e,n){this.protocolName=void 0,this.coverId=void 0,this.protocolName=e,this.coverId=n}var u=p.prototype;return u.displayConfig=function(){console.log("Client Config: "+this.protocolName+", Cover ID: "+this.coverId)},u.coverInfo=function(){try{return Promise.resolve(i(this.coverId))}catch(e){return Promise.reject(e)}},u.userPurchaseCover=function(i,p){try{return Promise.resolve((u=this.coverId,s=i,y=p,Promise.resolve(a()).then(function(i){var a=new e.Contract(r,n,i);return Promise.resolve(t(u,s,y)).then(function(n){var t=n.weiValue;console.log(t);var i=e.parseEther(s.toString());return Promise.resolve(a.purchaseCover(u,i,y,t)).then(function(e){return Promise.resolve(e.wait()).then(function(e){return e.hash})})})})))}catch(e){return Promise.reject(e)}var u,s,y},u.calculateUserCoverFee=function(e,n){try{return Promise.resolve(t(this.coverId,e,n)).then(function(e){return e.numericFee})}catch(e){return Promise.reject(e)}},p}();export{p as default};
